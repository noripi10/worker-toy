name = "worker-toy"
main = "src/index.ts"
compatibility_date = "2024-04-03"
compatibility_flags= ["nodejs_compat"]

[triggers]
crons = ["*/5 * * * *"]

# Variable bindings. These are arbitrary, plaintext strings (similar to environment variables)
# Note: Use secrets to store sensitive data.
# Docs: https://developers.cloudflare.com/workers/platform/environment-variables\
[vars]
MY_VARIABLE = "development_value"
[env.production.vars]
MY_VARIABLE = "production_value"

# Bind a KV Namespace. Use KV as persistent storage for small key-value pairs.
# Docs: https://developers.cloudflare.com/workers/runtime-apis/kv
[[kv_namespaces]]
binding = "MY_WORKER_TOY"
id = "bee798b9e6d041a3b0f32918809d4a48"
preview_id = "bee798b9e6d041a3b0f32918809d4a48"
[[env.production.kv_namespaces]]
binding = "MY_WORKER_TOY"
id = "bee798b9e6d041a3b0f32918809d4a48"

# Bind an R2 Bucket. Use R2 to store arbitrarily large blobs of data, such as files.
# Docs: https://developers.cloudflare.com/r2/api/workers/workers-api-usage/
[[r2_buckets]]
binding = "MY_PICTURES_BUCKET"
bucket_name = "pictures"
preview_bucket_name  = "pictures"
[[env.production.r2_buckets]]
binding = "MY_PICTURES_BUCKET"
bucket_name = "pictures"
preview_bucket_name  = "pictures"

# Bind an D1
# Docs: https://developers.cloudflare.com/d1/
[[d1_databases]]
binding = "MY_WORKER_TOY_DB" # i.e. available in your Worker on env.DB
database_name = "d1-worker-toy"
database_id = "4952de3f-41b0-4c40-a4c5-52876a5139c3"
[[env.production.d1_databases]]
binding = "MY_WORKER_TOY_DB" # i.e. available in your Worker on env.DB
database_name = "d1-worker-toy"
database_id = "4952de3f-41b0-4c40-a4c5-52876a5139c3"

# Bind a Queue producer. Use this binding to schedule an arbitrary task that may be processed later by a Queue consumer.
# Docs: https://developers.cloudflare.com/queues/get-started
# [[queues.producers]]
# binding = "MY_QUEUE"
# queue = "my-queue"

# Bind a Queue consumer. Queue Consumers can retrieve tasks scheduled by Producers to act on them.
# Docs: https://developers.cloudflare.com/queues/get-started
# [[queues.consumers]]
# queue = "my-queue"

# Bind another Worker service. Use this binding to call another Worker without network overhead.
# Docs: https://developers.cloudflare.com/workers/platform/services
# [[services]]
# binding = "MY_SERVICE"
# service = "my-service"

# Bind a Durable Object. Durable objects are a scale-to-zero compute primitive based on the actor model.
# Durable Objects can live for as long as needed. Use these when you need a long-running "server", such as in realtime apps.
# Docs: https://developers.cloudflare.com/workers/runtime-apis/durable-objects
# [[durable_objects.bindings]]
# name = "MY_DURABLE_OBJECT"
# class_name = "MyDurableObject"

# Durable Object migrations.
# Docs: https://developers.cloudflare.com/workers/learning/using-durable-objects#configure-durable-object-classes-with-migrations
# [[migrations]]
# tag = "v1"
# new_classes = ["MyDurableObject"]
